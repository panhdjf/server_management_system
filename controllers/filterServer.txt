package controllers

import (
	"net/http"

	"github.com/gin-gonic/gin"
	"github.com/panhdjf/server_management_system/models"
)

type Fiter interface {
	FilterServer(ctx *gin.Context) []models.Server
}

type FilerStatus struct {
	sc *SeverController
}

type FilerIpv4 struct {
	sc *SeverController
}

func (fs *FilerStatus) FilterServer(ctx *gin.Context) (servers []models.Server) {
	serverStatus := ctx.Param("serverStatus")
	result := fs.sc.DB.Find(&servers, "status = ?", serverStatus)
	if result.Error != nil {
		ctx.JSON(http.StatusNotFound, gin.H{"status": "fail", "message": "No Server with that Status exists"})
		return
	}

	return servers
}

func (fi *FilerIpv4) FilterServer(ctx *gin.Context) (servers []models.Server) {
	serverIpv4 := ctx.Param("serverIpv4")
	result := fi.sc.DB.Find(&servers, "Ipv4 = ?", serverIpv4)
	if result.Error != nil {
		ctx.JSON(http.StatusNotFound, gin.H{"status": "fail", "message": "No Server with that Ipv4 exists"})
		return
	}

	return servers
}
